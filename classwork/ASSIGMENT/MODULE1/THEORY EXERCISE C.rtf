{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil Calibri;}}
{\*\generator Riched20 10.0.26100}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\ul\b\f0\fs28\lang9 Module 1 \f1\endash  SE -Overview of IT Industry\ulnone\b0\fs22\par

\pard\sl240\slmult1\qj\b\f0\fs24\lang1033 1\f1\lang9 : Explain in your own words what a program is and how it functions.\par
What is Programming?\par
\f0\lang1033 Ans => \b0 A program is a set of instructions that a computer follows to perform tasks. Programming is the process of creating these instructions using programming languages.\b\f1\lang9\par
\par
\f0\lang1033 2\f1\lang9 : What are the key steps involved in the programming process\f0\lang1033 .\f1\lang9\par
Types of Programming Languages\f0\lang1033 ?\par
Ans => \b0 Key steps:\par
1- Define the problem\par
2- Design algorithms\par
3- Write code\par
4- Test and debug\par
5- Deploy and maintain\par
Types: High-level (e.g., Python), low-level (e.g., Assembly), and scripting (e.g., JavaScript)\b\par
\par
3: What are the main differences between high-level and low-level\par
programminglanguages.\par
World Wide Web & How Internet Works?\par
Ans => \b0 - High-level: Easy to understand, abstract, platform-independent.\par
Low-level: Close to hardware, fast, platform-specific.\par
- The internet connects devices globally, and the web uses protocols like HTTP to access data through browsers.\par
\b\par
4: Describe the roles of the client and server in web communication.Network Layers on Client and Server?\par
Ans => - \b0 Client: Requests services/resources.\par
- Server: Provides services/resources.\par
Network layers include application, transport, network, and physical\b\par
\par
5: Explain the function of the TCP/IP model and its layers.Client and Servers?\par
Ans => \b0 The TCP/IP model ensures reliable communication with four layers: Application, Transport, Internet, and Network Access. Clients request resources; servers deliver them.\par
\b\par
6: Explain Client Server Communication.Types of Internet Connections?\par
Ans => \b0 Clients communicate with servers via protocols like HTTP.\par
Types of connections: Dial-up, DSL, cable, fiber-optic, satellite.\b\par
\par
7: How does broadband differ from fiber-optic internet. Protocols?\par
Ans => \b0 Broadband uses wider bandwidth but slower speeds; fiber-optic uses light signals, offering higher speeds.\par
Protocols are communication rules (e.g., HTTP, FTP).\b\par
\par
8: What are the differences between HTTP and HTTPS protocols.Application Security?\par
Ans => \b0 HTTP: Unencrypted, insecure.\par
HTTPS: Encrypted, secure.\b\par
\par
9: What is the role of encryption in securing applications\par
Software Applications and Its Types?\par
Ans => \b0 Encryption protects data by converting it into unreadable formats.\par
Types of software: System (e.g., OS) and application (e.g., browsers).\par
\b\par
10: What is the difference between system software and application software. Software Architecture?\par
Ans => \b0 System software manages hardware; application software performs specific tasks for users.\par
Software architecture defines structure and operation.\b\par
\par
11: What is the significance of modularity in software architecture. Layers in Software Architecture?\par
Ans => \b0 Modularity simplifies updates and maintenance.\par
Layers: Presentation, business logic, and data.\b\par
\par
12: Why are layers important in software architecture. Software Environments?\par
Ans => \b0 Layers ensure scalability and separation of concerns.\par
Software environments provide tools and settings for development.\b\par
\par
13: Explain the importance of a development environment in software production.\par
Source Code?\par
Ans => \b0 Development environments simplify coding, debugging, and testing.\par
Source code is the human-readable form of a program.\b\par
\par
14: What is the difference between source code and machine code? Github and Introductions?\par
Ans => \b0 Source code is written by developers; machine code is executed by the computer.\par
GitHub is a platform for version control and collaboration\par
\b\par
15: Why is version control important in software development. Student Account in Github?\par
Ans => \b0 Version control helps track changes in code, allows multiple developers to collaborate, and makes it easy to recover previous versions if needed. It organizes projects, supports experimentation with branching, and ensures accountability.\par
\par
\b Student Account in GitHub  \b0\par
A GitHub Student Account gives free access to GitHub Pro, private repositories, learning resources, and developer tools. It helps students collaborate, learn, and showcase their projects. Students can apply with a school email or proof of enrollment.\b\par
\par
16: What are the benefits of using Github for students. Types of Software?\par
Ans =>  \b0 Benefits of Using GitHub for Students:  \par
1. Free access to GitHub Pro and private repositories.  \par
2. Collaboration on projects with peers.  \par
3. Access to learning resources and tutorials.  \par
4. Showcase projects to potential employers.  \par
5. Developer tools via GitHub Student Developer Pack.  \par
\par
 Types of Software:  \par
1. System Software: Operates hardware (e.g., OS, drivers).  \par
2. Application Software: Helps users perform tasks (e.g., word processors, games).  \par
3. Utility Software: Maintains system performance (e.g., antivirus).  \par
4. Development Software: Tools for creating software (e.g., IDEs, debuggers).\par
\par
\b 17: What are the differences between open-source and proprietary software. GIT and GITHUB Training?\par
Ans => \b0 Differences Between Open-Source and Proprietary Software:  \par
1. Open-Source Software:  \par
   - Code is publicly available and can be modified.  \par
   - Free to use and distribute.  \par
   - Community-driven development.  \par
\par
2. Proprietary Software:  \par
   - Code is closed and controlled by the owner.  \par
   - Requires a license to use.  \par
   - Support and updates are provided by the company.  \par
\par
   Git and GitHub Training:  \par
- Git: A version control system to track changes in code.  \par
- GitHub: A platform to store, share, and collaborate on Git projects.  \par
- Training: Helps developers learn version control basics, collaboration workflows, and how to manage repositories effectively.\par
\b\par
18: How does GIT improve collaboration in a software development team.Application Software?\par
Ans => \b0\par
1. Version Control : Tracks changes and maintains a history of edits.  \par
2. Branching : Allows team members to work on features independently.  \par
3. Merging : Combines work seamlessly without overwriting code.  \par
4. Conflict Resolution : Identifies and resolves code conflicts.  \par
5. Centralized Repository : Enables easy sharing and synchronization of code.  \par
\par
\b Application Software:  \b0\par
Application software is designed to help users perform specific tasks, such as:  \par
1. Word processing (e.g., Microsoft Word).  \par
2. Web browsing (e.g., Google Chrome).  \par
3. Communication (e.g., Zoom).  \par
4. Entertainment (e.g., games, streaming apps).  \par
\b\par
19: What is the role of application software in businesses.Software Development Process?\par
Ans =>\b0  Role of Application Software in Businesses:  \par
Helps automate tasks, improve productivity, facilitate communication, and support decision-making.  \par
\par
\b Software Development Process:  \b0\par
1. Plan  \par
2. Analyze requirements  \par
3. Design  \par
4. Develop  \par
5. Test  \par
6. Deploy  \par
7. Maintain\par
\par
\b 20: What are the main stages of the software development process. Software Requirement?\par
Ans => \b0  Main Stages of the Software Development Process:  \par
1. Planning  \par
2. Requirement Analysis  \par
3. Design\par
4. Development \par
5. Testing\par
6. Deployment \par
7. Maintenance \par
\par
\b Software Requirement:  \b0\par
Defines the functionality and features a software must have to meet user and business needs. It includes functional and non-functional requirements.  \par
\b\par
21: Why is the requirement analysis phase critical in software development. Software Analysis?\par
Ans =>\b0  The requirement analysis phase is critical in software development because it helps identify and define the specific needs and expectations of the stakeholders. This phase ensures that the software will meet the users' needs, reduces the risk of scope changes, and helps avoid costly mistakes later in the development process. It lays the foundation for design, development, and testing, ensuring alignment between all parties involved.\par
\b\par
22: What is the role of software analysis in the development process. System Design?\par
Ans => \b0 In the development process, software analysis helps to understand and define the problem to be solved, ensuring that the system\rquote s requirements are clearly identified. This leads to the creation of a well-structured system design. System design translates these requirements into a blueprint, specifying the architecture, components, and interactions needed to build the software, ensuring functionality, scalability, and performance align with user needs.\par
\b\par
23: What are the key elements of system design. Software Testing?\par
Ans => \b0 The key elements of system design include defining the system architecture, specifying components and modules, determining data flow and interfaces, and outlining hardware and software requirements. These elements ensure the system is scalable, reliable, and maintainable. In software testing, these design elements guide the creation of test cases, ensuring the system functions as intended, meets user requirements, and is free from defects.\par
\b\par
24: Why is software testing important. Maintenance?\par
Ans => \b0 Software testing is important because it ensures the software is reliable, functional, and free from defects, helping to meet user expectations and preventing costly errors in production. In the maintenance phase, testing ensures that updates, bug fixes, and changes do not introduce new issues and that the system continues to perform as expected over time.\par
\b\par
25: What types of software maintenance are there. Development?\par
Ans => \b0 There are four types of software maintenance: corrective (fixing defects), adaptive (modifying for changes in the environment), perfective (enhancing performance or features), and preventive (improving future maintainability). In the development phase, these maintenance activities may be planned for future updates or improvements once the software is operational.\par
\b\par
26: What are the key differences between web and desktop applications?\par
\f1\bullet  Web Application\f0\par
Ans => \b0 Key differences between web and desktop applications:\par
\par
  - \b Web Application: \b0\par
  - Runs in a web browser, requiring internet access.\par
  - Accessible from any device with a browser.\par
  - Centralized updates; users always access the latest version.\par
  - No installation needed on the user\rquote s device.\par
  - Data storage is typically on remote servers.\par
\par
  - \b Desktop Application: \b0\par
  - Installed and run on a specific computer.\par
  - Can function offline (local storage).\par
  - Updates need to be manually installed.\par
  - Tends to have deeper integration with system hardware and resources.\b\par
\par
\f1\par
\f0 27\f1 : What are the advantages of using web applications over desktop applications\f0 ?\f1\par
\bullet  Designing\f0\par
Ans => Advantages of using web applications over desktop applications in designing:\b0\par
\par
- Cross-platform accessibility: Web applications can be accessed from any device with     a browser, offering greater flexibility for users on different operating systems.\par
- Centralized updates: Updates and bug fixes are applied on the server, ensuring all users have access to the latest version without manual installation.\par
- Reduced installation requirements : Users don\rquote t need to install or maintain software on their devices, making it easier to deploy and manage.\par
- Collaboration : Web applications often support real-time collaboration, making them ideal for team-based design work.\par
- Scalability : Web apps can scale easily with cloud infrastructure to handle more users and data.\b\par
\f1\par
\f0 28\f1 : What role does UI/UX design play in application development\f0 ?\f1\par
\bullet  Mobile Application\f0\par
Ans => \b0 UI/UX design plays a critical role in mobile application development by focusing on the user interface (UI) and user experience (UX) to ensure the app is intuitive, engaging, and easy to use. Good UI/UX design enhances usability, improves navigation, and creates a visually appealing layout, leading to better user satisfaction and retention. It also optimizes performance for mobile devices, ensuring the app runs smoothly and efficiently, offering a seamless experience across different screen sizes and platforms.\b\par
\f1\par
\f0 29\f1 : What are the differences between native and hybrid mobile apps\f0 ?\f1\par
\bullet  DFD (Data Flow Diagram)\f0\par
Ans => Native Mobile Apps:\b0\par
Developed specifically for a single platform (e.g., iOS or Android).\par
Written in platform-specific languages (Swift/Objective-C for iOS, Java/Kotlin for Android).\par
Provides better performance and access to device features.\par
Requires separate development for each platform.\par
\par
\b Hybrid Mobile Apps:\b0\par
Built using web technologies (HTML, CSS, JavaScript) and run inside a native container.\par
Can be deployed across multiple platforms with the same codebase.\par
Performance may be lower compared to native apps.\par
Easier to maintain with a single codebase.\b\par
\f1\par
\f0 30\f1 : What is the significance of DFDs in system analysis\f0 ?\f1\par
\bullet  Desktop Application\f0\par
Ans => \b0 DFDs are important in system analysis because they visually represent how data flows within a system, helping identify system components, clarify requirements, and simplify complex processes. They improve communication among stakeholders, highlight potential issues, and serve as documentation for system design and development, especially in desktop applications.\b\par
\par
31: What are the pros and cons of desktop applications compared to\par
webapplications?\par
\f1\bullet  Flow Chart\par
\f0 Ans => Desktop Applications :\b0\par
\b Pros\b0  : Better performance, offline use, full access to system resources, more responsive.\par
\b Cons \b0 : Platform-dependent, manual updates, requires installation, limited accessibility.\par
\par
\b Web Applications :\b0\par
\b Pros\b0  : Cross-platform, easy updates, accessible anywhere, no installation.\par
\b Cons\b0  : Requires internet, slower performance, limited system access, security concerns.\par
\par
                      +---------------------------+\par
                      |  Application Type |\par
                      +---------------------------+\par
                            /                   \\\par
                  +----------------+          +----------------+\par
                 |Desktop Apps|       | Web Apps  |\par
                  +----------------+          +----------------+\par
                        |                                           |\par
         +-----------+-----------------+               +---------------------+\par
         | Performance, Offline|                | Cross-Platform|\par
         | Use, Direct Access    |                 | Updates,        |\par
         +-----------+-----------------+                | Accessibility   |\par
                        |                                      +----------------------+\par
 +--------------+---------------+                                 |\par
 | Platform Dependent |                              +------------------+\par
 | Installation Needed  |                              | Internet      |\par
 +-------------------------------+                            | Dependency|\par
                                                                      +-------------------+\b\par
\f1\par
\f0 32\f1 : How do flowcharts help in programming and system design?\f0\par
Ans => \b0 Flowcharts help in programming and system design by visually representing logic, improving communication, aiding in debugging, and assisting in algorithm design. They also serve as documentation for future maintenance and development.\b\par
\par
\lang9\par
}
 